// ==========================================================================
// Mixins
// ==========================================================================

@mixin round($round: 5px) {
  border-radius: $round;
  -moz-border-radius: $round;
  -webkit-border-radius: $round;
  background-clip: padding-box;
}

// Bem selectors
// this adds __ to our specified class using the smacss guidelines
@mixin e($element) {
  &__#{$element} {
    @content;
  }
}

//modifier
//add-- when you make a new file
@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}

@mixin img-replace($img, $h, $w, $disp: block) {
  background-image: url('#{$path--rel}/#{$img}');
  background-repeat: no-repeat;
  width:$w;
  height:$h;
  display:$disp;
  @content;
}


@mixin pull($direction: none){
  @if $direction == "right" {
    float: right !important;
  }
  @elseif $direction == "left" {
    float: left !important;
  }

}

@mixin letterpress($x: 0, $y: 0, $blur: 1px, $color: #000){
  text-shadow:$x, $y, $blur, $color;
}

//mixin from codyhouse.co
@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

//BREAKPOINTS
@mixin breakpoint($point) {
  @if $point == desktopXL {
    @media only screen and (min-width: 1600px) { @content ; }
  }
  @else if $point == desktop {
    @media only screen and (min-width: 1200px) { @content ; }
  }
  @else if $point == laptop {
    @media only screen and (min-width: 992px) { @content ; }
  }
  @else if $point == tablet {
    @media only screen and (min-width: 768px) { @content ; }
  }
  @else if $point == mobile {
    @media (max-width: 480px)  { @content ; }

  }
}

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
  box-shadow: $shadow;
}

//Codyhouse Nav MQ settings
@mixin MQ($canvas) {
  @if $canvas == S {
    @media only screen and (min-width: $S) { @content; }
  }
  @else if $canvas == M {
    @media only screen and (min-width: $M) { @content; }
  }
  @else if $canvas == L {
    @media only screen and (min-width: $L) { @content; }
  }
}

// super light grid - it works with the .cd-container class inside style.scss
@mixin column($percentage, $float-direction:left) {
  width: 100% * $percentage;
  float: $float-direction;
}

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}


@mixin animation--fadedown($delay) {
  // Apply the fadeIn keyframes. Each animation
  // will take 0.3s and have an ease-in-out
  @include animation(fadeIn 0.3s ease-in-out);
  // This animation should only play once
  @include animation-iteration-count(1);
  // Make sure the element maintains it's
  // final visual state (i.e. 100% opacity)
  @include animation-fill-mode(forwards);
  // Delay - don't start the animation until we say so
  @include animation-delay(#{$delay}s);
}
